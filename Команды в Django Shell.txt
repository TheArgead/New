>>> from news.models import*
>>> u1 = User.objects.create_user(username='Sasha')
>>> u1
<User: Sasha>
>>> Author.objects.create(authorUser=u1)
<Author: Author object (1)>
>>> Category.objects.create(name='IT')
<Category: Category object (1)>
>>> author = Author.objects.get(id=1)
>>> author
<Author: Author object (1)>
>>> Post.objects.create(author=author, categoryType='NW', title='sometitle', text='somebigtext')
<Post: Post object (1)>
>>> Post.objects.get(id=1)
<Post: Post object (1)>
>>> Post.objects.get(id=1).title
'sometitle'
>>> Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1))  
>>> Comment.objects.create(commentPost=Post.objects.get(id=1), commentUser=Author.objects.get(id=1).authorUser, text='anytextbyauthor')
<Comment: Comment object (1)>
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).rating
1
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=1).dislike()
>>> Comment.objects.get(id=1).dislike()
>>> Comment.objects.get(id=1).dislike()
>>> Comment.objects.get(id=1).rating
0
>>> Comment.objects.get(id=1).dislike()
>>> Comment.objects.get(id=1).rating
-1
>>> Author.objects.get(id=1)
<Author: Author object (1)>
>>> a = Author.objects.get(id=1)
>>> a.update_rating()
>>> a.ratingAuthor  
-1
>>> Post.objects.get(id=1).like()
>>> a.update_rating()
>>> a.ratingAuthor  
2
>>> a = Author.objects.order_by('-ratingAuthor')[:1] 
>>> a
<QuerySet [<Author: Author object (1)>]>
>>> c = User.objects.create_user(username='Conor')  
>>> Author.objects.create(authorUser=c)  
<Author: Author object (2)>
IndentationError: unexpected indent
>>> a = Author.objects.order_by('-ratingAuthor')[:1]
>>> a
<QuerySet [<Author: Author object (1)>]>
>>> a = Author.objects.order_by('-ratingAuthor')
>>> a
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>]>
>>> a = Author.objects.order_by('-ratingAuthor')[:1]
>>> a
<QuerySet [<Author: Author object (1)>]>
>>> for i in a:
...     i.ratingAuthor
...     i.authorUser.username
... 
2
'Sasha'
>>>
